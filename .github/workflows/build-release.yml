name: Python package

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Install pytorch
        run: pip install torch==2.4.1 torchvision==0.19.1 torchaudio==2.4.1 --index-url https://download.pytorch.org/whl/cu124
      - name: Setup CUDA
        uses: Jimver/cuda-toolkit@v0.2.19
        id: cuda-toolkit
        with:
          cuda: "12.4.1"
          method: "network"
          sub-packages: '["nvcc", "cudart"]'
      - name: Build package
        run: python setup.py bdist_wheel
        env:
          TORCH_CUDA_ARCH_LIST: Turing
      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist/*
          retention-days: 1
          compression-level: 0

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "wheel-*/*"
          allowUpdates: true
          makeLatest: true
          token: ${{ secrets.GITHUB_TOKEN }}
